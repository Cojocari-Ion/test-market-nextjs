generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model Hey {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Product {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  description String
  image       String
  name        String
  price       BigInt
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  surname        String
  image          String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  admin          Boolean
  account        Account[]
  session        Session[]
}

model Account {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  userId           String  @db.ObjectId
  type             String
  provider         String
  prviderAccountId String
  refresh_token    String? @db.String
  access_token     String? @db.String
  expires_at       Int?
  token_type       String?
  scope            String?
  id_token         String?
  session_state    String?

  user User @relation(fields: [userId], references: [id])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}
